@model ChatVM

@{
    var recipientEmail = Model.RecipientEmail ?? string.Empty;
    var propertyAddress = Model.PropertyAddress ?? string.Empty;
    var propertyCity = Model.PropertyCity ?? string.Empty;
    var propertyPrice = Model.PropertyPrice.HasValue ? Model.PropertyPrice.Value.ToString("F2") : string.Empty;
}

<!-- Pass conversation Ids to JavaScript -->
<script>
    // Pass the conversations to JavaScript via the ViewModel
    const conversations = @Html.Raw(Json.Serialize(Model.Conversations));
    console.log("User's conversations: ", conversations);
    window.currentUserId = '@Model.UserId';
</script>

<div class="container mt-4">

    <!-- Chat Control Panel -->
    <div class="row mb-3">
        @{
            var chatText ="";
            chatText = (User.IsInRole(SD.Role_Admin) ? chatText += "Others" : User.IsInRole(SD.Role_Agent) ? chatText += "Renters" : chatText += "Agents");
        }
        <h2>Hello, @Model.ApplicationUser.Name! Chat with @chatText</h2>


        <!-- Hidden input for User's email -->
        <input type="hidden" id="senderEmail" value="@User.Identity.Name" />   
        
        <div class="col-md-6">
            <label for="receiverEmail" class="form-label"></label>
            <div class="d-flex align-items-center">
                <!-- Prepopulate if provided -->
                <input type="text" class="form-control" 
                    id="receiverEmail" value="@recipientEmail" 
                    placeholder="Enter their email" />
                <select id="propertySelect">
                    <option value="">Select Property (Optional)</option>
                    @foreach (var property in Model.PropertyList)
                    {
                        <option value="@property.Id">@property.Address</option>
                    }
                </select>
                <button id="startChat" class="col-md-3 btn btn-success px-4" style="margin-left: 10px;">Start Chat</button>
            </div>
        <div id="emailError">User not found. Please enter a valid email.</div> <!-- Error message -->
        </div>
    </div>


    <!-- Chat Area -->
    <div class="row">
        <!-- Conversation SideBar-->
        <div class="col-md-3">
            <h3>Your Conversations</h3>
            <!-- Conversation List -->
            <div id="conversation-list">
                @if (Model.Conversations.Any())
                {
                    @foreach (var conversation in Model.Conversations)
                    {
                        <div class="conversation-item" 
                        data-conversation-id="@conversation.ChatConversationId" 
                        data-recipient-email="@conversation.RecipientEmail"
                        data-property-id="@conversation.PropertyId">
                            
                            <div class="recipient">
                                UserName: <strong>@conversation.RecipientUserName</strong>
                            </div>
                            <div class="query-type">
                                Query: <strong>@(string.IsNullOrWhiteSpace(conversation.PropertyAddress) ? "General" : conversation.PropertyAddress)</strong>
                            </div>
                            <div class="last-message">@conversation.LastMessage</div>
                            <div class="timestamp">
                                @if (conversation.LastMessageTimestamp.HasValue)
                                {
                                    @conversation.LastMessageTimestamp.Value.ToString("g")
                                }
                                else
                                {
                                    @:No timestamp available
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Chat Window -->
        <div class="col-md-9">
            <div id="chatWindows">
                <p class="text-muted">Click a conversation to resume chat or enter email above to start a chat.</p>
                <div id="chatInfo"
                     data-recipient-email="@Model.RecipientEmail"
                     data-property-address="@(Model.PropertyAddress ?? "")"
                     data-property-city="@(Model.PropertyCity ?? "")"
                     data-property-price="@(Model.PropertyPrice?.ToString() ?? "")">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="module" src="~/js/chatSignalR.js"></script>
    <script type="module" src="~/js/chatMessages.js"></script>
    <script type="module" src="~/js/chatInputhelpers.js"></script>
    <script type="module" src="~/js/chat.js"></script>
}

