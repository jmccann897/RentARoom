# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - RentARoom-CSC7085

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use the latest stable version of Node.js

      - name: Restore dependencies
        run: dotnet restore RentARoom/RentARoom.sln

      - name: Build solution
        run: dotnet build RentARoom/RentARoom.sln --configuration Release --no-restore

     # UNIT TESTS
      - name: Run unit tests
        run: dotnet test RentARoom.Tests/RentARoom.Tests.csproj --filter "Category=Unit"

      # INSTALL AND START AZURITE FOR INTEGRATION TESTS
      - name: Install Azurite
        run: npm install -g azurite
      
      - name: Start Azurite
        run: |
          npx azurite --silent --location C:\azurite &
          Start-Sleep -Seconds 10
          Get-Content C:\azurite\debug.log
        shell: pwsh
          
      - name: Wait for Azurite
        run: sleep 10

      - name: Check if Azurite is listening
        run: |
            $connections = Get-NetTCPConnection -LocalPort 10000 -State Listen
            if ($connections) {
              Write-Output "Azurite is running on port 10000"
            } else {
              throw "Azurite is not listening on port 10000"
            }
        shell: pwsh
        
      # INTEGRATION TESTS
      - name: Run integration tests
        run: dotnet test RentARoom.Tests/RentARoom.Tests.csproj --no-build --filter "Category=Integration"
        env:
          AzureStorageConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;"

      - name: Publish web app
        run: dotnet publish RentARoom/RentARoom.csproj -c Release -o publish_output

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: publish_output

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'RentARoom-CSC7085'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D938C4ABB2E1420FA84AD0D7A186B1D2 }}
